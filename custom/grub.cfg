#hide kernel & initrd flash download progress indicators
rmmod progress

set prefix=(memdisk)/boot/grub

insmod at_keyboard
insmod usb_keyboard
insmod nativedisk
insmod ehci
insmod ohci
insmod uhci
insmod usb
insmod usbms
insmod regexp

terminal_input --append at_keyboard
terminal_input --append usb_keyboard
terminal_output --append cbmemc

gfxpayload=keep
terminal_output --append gfxterm

if [ -f (cbfsdisk)/font.pf2 ]; then
	loadfont (cbfsdisk)/font.pf2
fi
if [ -f (cbfsdisk)/theme.txt ]; then
	set theme=(cbfsdisk)/theme.txt
fi
if [ -f (cbfsdisk)/background.png ]; then
	insmod png
	background_image (cbfsdisk)/background.png
elif [ -f (cbfsdisk)/background.jpg ]; then
	insmod jpeg
	background_image (cbfsdisk)/background.jpg
fi

set default="0"
set timeout=10
set pager=1
set grub_scan_disk="ahci"

keymap usqwerty
function try_user_config {
	set root="${1}"
	for dir in /boot /grub* /@ /@boot /@grub*; do
		if [ -d ${dir} ]; then
			for subdir in ${dir} ${dir}/boot ${dir}/boot/grub* ${dir}/grub*; do
				if [ -d ${subdir} ]; then
					for name in '' osboot_ autoboot_ libreboot_ coreboot_; do
						if [ -f ${subdir}/${name}grub.cfg ]; then
							unset superusers
							configfile ${subdir}/${name}grub.cfg
						fi
					done
				fi
			done
		fi
	done
}
function search_grub {
	echo -n "Attempting to load grub.cfg from: "
	# Tries all partitions then all raw devices
	for disk in (${1}*); do
		echo "${disk}"
		try_user_config "${disk}"
	done
}
function try_isolinux_config {
	set root="${1}"
	for dir in '' /boot; do
		if [ -f "${dir}"/isolinux/isolinux.cfg ]; then
			syslinux_configfile -i "${dir}"/isolinux/isolinux.cfg
		elif [ -f "${dir}"/syslinux/syslinux.cfg ]; then
			syslinux_configfile -s "${dir}"/syslinux/syslinux.cfg
		fi
	done
}
function search_isolinux {
	echo
	echo "Attempting to parse isolinux/syslinux config from '${1}' devices"
	if [ -d (${1}*) ]; then
		for part in (${1}*); do
			try_isolinux_config ${part}
		done
	fi
	echo # Insert newline
}
menuentry 'Load Operating System          [o]' --hotkey='o' {

	if [ "${grub_scan_disk}" != "ata" ]; then
		search_grub ahci
	fi
	if [ "${grub_scan_disk}" != "ahci" ]; then
		search_grub ata
	fi

	# TODO: add more strings, based on what distros set up when
	# the user select auto-partitioning on those installers
	if [ -d (lvm/matrix-?ootvol) ]; then
		for vol in (lvm/matrix-bootvol) (lvm/matrix-rootvol); do
			try_user_config "${vol}"
		done
	fi
	
	# raid volumes, only 0-9
	if [ -d (md/?) ]; then
		for raidvol in (md/?); do
			try_user_config (md/?)
		done
	fi
	
	unset ahcidev
	unset atadev
	# get all ahci/ata raw disks and partitions
	if [ -d (${grub_scan_disk}*) ]; then
		for part in (${grub_scan_disk}*); do
			diskdev="$part $diskdev"
		done
	fi

	set pager=0
	echo -n "Attempting to unlock encrypted volumes"
	for dev in ${diskdev} ${lvmvol} ${raidvol}; do
		if cryptomount "${dev}" ; then break ; fi
	done
	set pager=1
	echo

	# after cryptomount, lvm volumes might be available
	# TODO: detect crypt volumes and provide the user a list of options to decrypt 
	# first. then, provide a list of all detected grub.cfg to choose from
	for vol in ${lvmvol}; do
		try_user_config "${vol}"
	done

	search_grub crypto

	if [ "${grub_scan_disk}" != "ata" ]; then
		# Last resort, if all else fails
		set root=ahci0,1
		for p in / /boot/; do
			if [ -f "${p}vmlinuz" ]; then
				linux ${p}vmlinuz root=/dev/sda1 rw
				if [ -f "${p}initrd.img" ]; then
					initrd ${p}initrd.img
				fi
			fi
		done
	fi

	if [ "${grub_scan_disk}" != "ahci" ]; then
		# Last resort (for setups that use IDE instead of SATA)
		set root=ata0,1
		for p in / /boot/; do
			if [ -f "${p}vmlinuz" ]; then
				linux ${p}vmlinuz root=/dev/sda1 rw
				if [ -f "${p}initrd.img" ]; then
					initrd ${p}initrd.img
				fi
			fi
		done
	fi

	true # Prevent pager requiring to accept each line instead of whole screen
}
menuentry 'Search ISOLINUX menu (AHCI)    [a]' --hotkey='a' {
	search_isolinux ahci
}
menuentry 'Search ISOLINUX menu (USB)     [u]' --hotkey='u' {
	search_isolinux usb
}
menuentry 'Search ISOLINUX menu (ATA/IDE) [d]' --hotkey='d' {
	search_isolinux ata
}
menuentry 'Load test configuration        [t]' --hotkey='t' {
	set root='(cbfsdisk)'
	if [ -f /grubtest.cfg ]; then
		configfile /grubtest.cfg
	fi
}
menuentry 'Search for external USB        [s]' --hotkey='s' {
	search_grub usb
}
if [ -f (cbfsdisk)/seabios.elf ]; then
menuentry 'Load SeaBIOS (payload)         [b]' --hotkey='b' {
	set root='cbfsdisk'
	chainloader /seabios.elf
}
fi
if [ -f (cbfsdisk)/img/grub2 ]; then
menuentry 'Return to SeaBIOS              [b]' --hotkey='b' {
	set root='cbfsdisk'
	chainloader /fallback/payload
}
fi
if [ -f (cbfsdisk)/DETAILS ]; then
menuentry 'Show Build Details             [x]' --hotkey='x' {
	cat (cbfsdisk)/DETAILS
	echo # insert newline
	sleep 2
}
fi
if [ -f (cbfsdisk)/img/memtest ]; then
menuentry 'Load MemTest86+                [m]' --hotkey='m' {
	set root='cbfsdisk'
	chainloader /img/memtest
}
fi
menuentry 'Poweroff                       [p]' --hotkey='p' {
	halt
}
menuentry 'Reboot                         [r]' --hotkey='r' {
	reboot
}
